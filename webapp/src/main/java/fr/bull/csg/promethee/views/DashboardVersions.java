package fr.bull.csg.promethee.views;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Link;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

import fr.bull.csg.promethee.NavigatorUI;
import fr.bull.csg.promethee.beans.ListeurVersions;


/**
 * @author Martiben
 */
@Component
@Scope("prototype")
public class DashboardVersions extends VerticalLayout implements View
{
   @Autowired
   private ListeurVersions m_listeurVersion;
   
   /** Serial UID. */
   private static final long serialVersionUID = -7081680636978287909L;

   public DashboardVersions()
   {
      buildMainLayout();
      addComponent(mainLayout);
      valoComposants();
   }

   private void valoComposants()
   {
      // Seulement les lignes remplies
      table_1.setPageLength(0);
      table_2.setPageLength(0);
      table_3.setPageLength(0);

      // Noms de colonnes
      table_1.addContainerProperty("#", String.class, null);
      table_1.addContainerProperty("Nom de build", String.class, null);
      table_1.addContainerProperty("Date de création", String.class, null);
      table_1.addContainerProperty("Date de livraison", String.class, null);
      table_1.addContainerProperty("Type livraison", String.class, null);
      table_1.addContainerProperty("Commentaire", String.class, null);
      table_1.addContainerProperty("", String.class, null);

      table_2.addContainerProperty("#", String.class, null);
      table_2.addContainerProperty("Nom de build", String.class, null);
      table_2.addContainerProperty("Date de création", String.class, null);
      table_2.addContainerProperty("Date de livraison", String.class, null);
      table_2.addContainerProperty("Type livraison", String.class, null);
      table_2.addContainerProperty("Commentaire", String.class, null);
      table_2.addContainerProperty("", String.class, null);

      table_3.addContainerProperty("#", String.class, null);
      table_3.addContainerProperty("Nom de build", String.class, null);
      table_3.addContainerProperty("Date de création", String.class, null);
      table_3.addContainerProperty("Date de livraison", String.class, null);
      table_3.addContainerProperty("Type livraison", String.class, null);
      table_3.addContainerProperty("Commentaire", String.class, null);
      table_3.addContainerProperty("", String.class, null);

      // Contenu
      List<Object[]> listeMantis = new ArrayList<Object[]>();

      listeMantis.add(new Object[] { "9", "20130304_1424_V4131", "4 Mars 2013", "5 Mars 2013 ", "relivraison", "Relivraison 4.13.1(prbm qualif + ejb-jar)", "" });
      listeMantis.add(new Object[] { "5", "20130214_0824_V4131", "1 Février 2013", "14 Février 2013", "initial", "", "" });
      listeMantis
         .add(new Object[] { "3", "20130128_1120_V4130", "4 Janvier 2013", "28 Janvier 2013", "initial", "Lot 2 (ehcache, correctif + réouvert, reports, bouchonnage)", "" });
      listeMantis.add(new Object[] { "2", "20121114_0856_V4127", "4 Janvier 2013", "14 Novembre 2012", "initial", "Lot 1 4.12.7 (mantis évolutif, testabilité sans bouchonnage)",
         "" });
      remplirTable(listeMantis, table_1);
      table_1.setFooterVisible(false);

      listeMantis = new ArrayList<Object[]>();
      listeMantis.add(new Object[] { "4", "20130313_V5.2.0", "4 Janvier 2013", "13 Mars 2013", "initial", "", "" });
      remplirTable(listeMantis, table_2);

      listeMantis = new ArrayList<Object[]>();
      listeMantis.add(new Object[] { "8", "20130227_0845_V4126", "26 Février 2013", "28 Février 2013", "debloquage", "Fabrication Hibernate", "" });
      listeMantis.add(new Object[] { "6", "20130204_1715_V4126", "1 Février 2013 	6 Février 2013", "relivraison", "Ajout de 04 Mock. Attendue le 6/01", "" });
      listeMantis.add(new Object[] { "1", "20121122_1002_V4126", "4 Janvier 2013 	22 Novembre 2012 ", "debloquage", "Débloquage 4.12.6 du 22/10/2012", "" });
      remplirTable(listeMantis, table_3);

      table_1.addItemClickListener(new ItemClickListener()
      {
         /** Serial UID. */
         private static final long serialVersionUID = 6206186208485896491L;

         @Override
         public void itemClick(ItemClickEvent event)
         {
            getUI().getNavigator().navigateTo(NavigatorUI.VUE_BUILD);
         }
      });

      table_2.addItemClickListener(new ItemClickListener()
      {
         /** Serial UID. */
         private static final long serialVersionUID = 6484556884934239189L;

         @Override
         public void itemClick(ItemClickEvent event)
         {
            getUI().getNavigator().navigateTo(NavigatorUI.VUE_BUILD);
         }
      });

      table_2.addItemClickListener(new ItemClickListener()
      {
         /** Serial UID. */
         private static final long serialVersionUID = 3558185627777581338L;

         @Override
         public void itemClick(ItemClickEvent event)
         {
            getUI().getNavigator().navigateTo(NavigatorUI.VUE_BUILD);
         }
      });

      List<String> arrayVersions = m_listeurVersion.listerLesVersionsDisponibles();
      // Valo des links mais pas des Zelda !
      link_1.setCaption(arrayVersions.get(0));
      link_2.setCaption(arrayVersions.get(1));
      link_3.setCaption(arrayVersions.get(2));
   }

   private void remplirTable(List<Object[]> p_listeMantis, Table p_table)
   {
      int i = 0;
      for (Object[] mantis : p_listeMantis)
      {
         p_table.addItem(mantis, i);
         i++;
      }
   }

   @Override
   public void enter(ViewChangeListener.ViewChangeEvent event)
   {

   }

   @AutoGenerated
   private VerticalLayout mainLayout;

   @AutoGenerated
   private HorizontalLayout horizontalLayout_1;

   @AutoGenerated
   private VerticalLayout verticalLayout_2;

   @AutoGenerated
   private Table table_3;

   @AutoGenerated
   private Label label_3;

   @AutoGenerated
   private Table table_2;

   @AutoGenerated
   private Label label_1;

   @AutoGenerated
   private Table table_1;

   @AutoGenerated
   private Label label_2;

   @AutoGenerated
   private VerticalLayout verticalLayout_1;

   @AutoGenerated
   private Link link_3;

   @AutoGenerated
   private Link link_2;

   @AutoGenerated
   private Link link_1;

   @AutoGenerated
   private Label label1;

   @AutoGenerated
   private NativeButton nativeButton_1;

   @AutoGenerated
   private VerticalLayout buildMainLayout()
   {
      // common part: create layout
      mainLayout = new VerticalLayout();
      mainLayout.setImmediate(false);
      mainLayout.setWidth("100%");
      mainLayout.setHeight("100%");
      mainLayout.setMargin(false);

      // top-level component properties
      setWidth("100.0%");
      setHeight("100.0%");

      // horizontalLayout_1
      horizontalLayout_1 = buildHorizontalLayout_1();
      mainLayout.addComponent(horizontalLayout_1);

      return mainLayout;
   }

   @AutoGenerated
   private HorizontalLayout buildHorizontalLayout_1()
   {
      // common part: create layout
      horizontalLayout_1 = new HorizontalLayout();
      horizontalLayout_1.setImmediate(false);
      horizontalLayout_1.setWidth("-1px");
      horizontalLayout_1.setHeight("-1px");
      horizontalLayout_1.setMargin(false);

      // verticalLayout_1
      verticalLayout_1 = buildVerticalLayout_1();
      horizontalLayout_1.addComponent(verticalLayout_1);
      horizontalLayout_1.setComponentAlignment(verticalLayout_1, new Alignment(20));

      // verticalLayout_2
      verticalLayout_2 = buildVerticalLayout_2();
      horizontalLayout_1.addComponent(verticalLayout_2);

      return horizontalLayout_1;
   }

   @AutoGenerated
   private VerticalLayout buildVerticalLayout_1()
   {
      // common part: create layout
      verticalLayout_1 = new VerticalLayout();
      verticalLayout_1.setImmediate(false);
      verticalLayout_1.setWidth("-1px");
      verticalLayout_1.setHeight("-1px");
      verticalLayout_1.setMargin(true);

      // nativeButton_1
      nativeButton_1 = new NativeButton();
      nativeButton_1.setCaption("Créer un Build");
      nativeButton_1.setImmediate(true);
      nativeButton_1.setWidth("-1px");
      nativeButton_1.setHeight("-1px");
      verticalLayout_1.addComponent(nativeButton_1);

      // label1
      label1 = new Label();
      label1.setImmediate(false);
      label1.setWidth("-1px");
      label1.setHeight("-1px");
      label1.setValue("Branches Disponibles");
      verticalLayout_1.addComponent(label1);

      // link_1
      link_1 = new Link();
      link_1.setImmediate(false);
      link_1.setWidth("-1px");
      link_1.setHeight("-1px");
      verticalLayout_1.addComponent(link_1);

      // link_2
      link_2 = new Link();
      link_2.setImmediate(false);
      link_2.setWidth("-1px");
      link_2.setHeight("-1px");
      verticalLayout_1.addComponent(link_2);

      // link_3
      link_3 = new Link();
      link_3.setImmediate(false);
      link_3.setWidth("-1px");
      link_3.setHeight("-1px");
      verticalLayout_1.addComponent(link_3);

      return verticalLayout_1;
   }

   @AutoGenerated
   private VerticalLayout buildVerticalLayout_2()
   {
      // common part: create layout
      verticalLayout_2 = new VerticalLayout();
      verticalLayout_2.setImmediate(false);
      verticalLayout_2.setWidth("-1px");
      verticalLayout_2.setHeight("-1px");
      verticalLayout_2.setMargin(true);

      // label_2
      label_2 = new Label();
      label_2.setImmediate(false);
      label_2.setWidth("-1px");
      label_2.setHeight("-1px");
      label_2.setValue("trunk V4 (4.13.1)");
      verticalLayout_2.addComponent(label_2);

      // table_1
      table_1 = new Table();
      table_1.setImmediate(false);
      table_1.setWidth("-1px");
      table_1.setHeight("-1px");
      verticalLayout_2.addComponent(table_1);

      // label_1
      label_1 = new Label();
      label_1.setImmediate(false);
      label_1.setWidth("-1px");
      label_1.setHeight("-1px");
      label_1.setValue("trunk V5 (5.2.0)");
      verticalLayout_2.addComponent(label_1);

      // table_2
      table_2 = new Table();
      table_2.setImmediate(false);
      table_2.setWidth("-1px");
      table_2.setHeight("-1px");
      verticalLayout_2.addComponent(table_2);

      // label_3
      label_3 = new Label();
      label_3.setImmediate(false);
      label_3.setWidth("-1px");
      label_3.setHeight("-1px");
      label_3.setValue("prod 4.12.6");
      verticalLayout_2.addComponent(label_3);

      // table_3
      table_3 = new Table();
      table_3.setImmediate(false);
      table_3.setWidth("-1px");
      table_3.setHeight("-1px");
      verticalLayout_2.addComponent(table_3);

      return verticalLayout_2;
   }
}
